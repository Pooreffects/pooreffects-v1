---
import Button from "./ui/button.astro";
import Spinner from "./ui/icons/spinner.astro";
---
<form
  action="https://api.web3forms.com/submit"
  method="POST"
  id="form"
  class="needs-validation"
  novalidate
>
  <input type="hidden" name="access_key" value="1c9e857c-73ea-4036-a7ef-90c42a727550" />
  <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
  
  <div class="mb-5">
    <input
      type="text"
      placeholder="Full Name"
      required
      class="w-full px-4 py-3 border-2 text-sm text-indigo-900 dark:text-indigo-100 placeholder:text-slate-500 dark:placeholder:text-indigo-300 transition-all rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100 glass-effect"
      name="name"
    />
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Please provide your full name.
    </div>
  </div>
  
  <div class="mb-5">
    <label for="email_address" class="sr-only">Email Address</label>
    <input
      id="email_address"
      type="email"
      placeholder="Email Address"
      name="email"
      required
      class="glass-effect text-indigo-900 dark:text-indigo-100 w-full px-4 py-3 border-2 text-sm placeholder:text-slate-500 dark:placeholder:text-indigo-300 transition-all rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">
      Please provide your email address.
    </div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Please provide a valid email address.
    </div>
  </div>
  
  <div class="mb-3">
    <textarea
      name="message"
      required
      placeholder="Your Message (Max 500 characters)"
      maxlength="500"
      class="glass-effect text-indigo-900 dark:text-indigo-100 resize-none w-full px-4 py-3 border-2 text-sm placeholder:text-slate-500 dark:placeholder:text-indigo-300 transition-all rounded-md outline-none h-40 focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    ></textarea>
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Please enter your message.
    </div>
  </div>
  
  <Button type="submit" size="lg" block>Send Message</Button>
  
  <!-- Spinner Container -->
  <div id="spinner" class="hidden mt-3 text-center">
    <Spinner class="w-10 h-10 text-teal-500 dark:text-pink-300" />
  </div>
  
  <!-- Result Container -->
  <div id="result" class="mt-3 text-center hidden"></div>
</form>

<style>
  .glass-effect {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
    -webkit-backdrop-filter: blur(30px);
    backdrop-filter: blur(30px);
    box-shadow: 0 6px 16px 0 rgba(0,0,0, 0.37);
    border: 1px solid rgba(255, 255, 255, 0.18);
    border-radius: 1.5rem;
  }

  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }


  /* Success and error text colors */
  .text-green-500 {
    color: #28a745;
  }

  .text-red-500 {
    color: #dc3545;
  }
</style>

<script is:inline>
 document.addEventListener("DOMContentLoaded", function () {
  const form = document.getElementById("form");
  const result = document.getElementById("result");
  const spinner = document.getElementById("spinner");

  form.addEventListener("submit", function (e) {
    e.preventDefault();
    form.classList.add("was-validated");

    if (!form.checkValidity()) {
      form.querySelector(":invalid").focus();
      return;
    }

    const formData = new FormData(form);
    const json = JSON.stringify(Object.fromEntries(formData));

    // Show spinner and hide result
    spinner.classList.remove("hidden");
    spinner.classList.add("flex", "justify-center", "items-center"); // Apply flex layout
    result.classList.add("hidden");

    fetch("https://api.web3forms.com/submit", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: json,
    })
    .then(async (response) => {
      const jsonResponse = await response.json();
      if (response.ok) {
        spinner.classList.remove("flex", "justify-center", "items-center"); // Remove flex layout
        spinner.classList.add("hidden");
        result.classList.remove("hidden");
        result.classList.add("text-green-500");
        result.innerHTML = `<div class="check-icon"></div> ${jsonResponse.message}`;
      } else {
        result.classList.remove("hidden");
        result.classList.add("text-red-500");
        result.innerHTML = `<div class="error-icon"></div> ${jsonResponse.message}`;
      }
    })
    .catch((error) => {
      console.error(error);
      result.classList.remove("hidden");
      result.classList.add("text-red-500");
      result.innerHTML = '<div class="error-icon"></div> Something went wrong!';
    })
    .finally(() => {
      form.reset();
      form.classList.remove("was-validated");
      setTimeout(() => {
        result.classList.add("hidden");
        spinner.classList.add("hidden");
      }, 5000);
    });
  });
});

</script>
