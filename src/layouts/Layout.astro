---
import { SEO } from "astro-seo";
import Footer from "@components/footer.astro";
import Navbar from "@components/navbar/navbar.astro";
import "@fontsource-variable/inter/index.css";
import '@fontsource-variable/bricolage-grotesque';

export interface Props {
  title: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();

const resolvedImageWithDomain = new URL(
  "/opengraph.jpg",
  Astro.site
).toString();

const { title } = Astro.props;

const makeTitle = title
  ? title + " | " + "Pooreffects"
  : "Pooreffects - A hub for my digital garden, blog, and technology playground";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <SEO
      title={makeTitle}
      description="Pooreffects - A hub for my digital garden, blog, and technology playground"
      canonical={canonicalURL}
      twitter={{
        creator: "@pooreffects",
        site: "@pooreffects",
        card: "summary_large_image",
      }}
      openGraph={{
        basic: {
          url: canonicalURL,
          type: "website",
          title: `Pooreffects`,
          image: resolvedImageWithDomain,
        },
        image: {
          alt: "Pooreffects Homepage Screenshot",
        },
      }}
    />
  </head>
  <body class='bg-indigo-100 dark:bg-indigo-900'>
      <Navbar />
      <slot />
      <Footer />
      <style is:global>
        /* Improve Page speed */
        /* https://css-tricks.com/almanac/properties/c/content-visibility/ */
        img {
          content-visibility: auto;
        }
  
      </style>
    </body>
</html>

<script is:inline>
  // Theme toggle functionality TODO: Look into the Astro Transitions feature
document.addEventListener("DOMContentLoaded", () => {
const themeToggleBtn = document.getElementById("theme-toggle");
const prefersDarkScheme = window.matchMedia("(prefers-color-scheme: dark)");
const currentTheme = localStorage.getItem("theme");

if (currentTheme === "dark" || (!currentTheme && prefersDarkScheme.matches)) {
document.documentElement.classList.add("dark");
} else {
document.documentElement.classList.remove("dark");
}

themeToggleBtn.addEventListener("click", () => {
if (document.documentElement.classList.contains("dark")) {
document.documentElement.classList.remove("dark");
localStorage.setItem("theme", "light");
} else {
document.documentElement.classList.add("dark");
localStorage.setItem("theme", "dark");
}
});
});

</script> 